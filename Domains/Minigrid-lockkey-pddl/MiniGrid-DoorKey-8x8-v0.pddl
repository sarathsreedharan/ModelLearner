(define (problem prob)
(:domain minigrid)
(:objects
	x2 x0 x3 x4 x6 x5 x7 x1 - xpos
y1 y5 y4 y2 y7 y6 y0 y3 - ypos
key0 - key
door0 - door
yellow - color

	)

(:init
	(is-clear x1 y5)
(next-x-right x6 x7)
(next-y-down y5 y6)
(next-y-up y3 y2)
(is-clear x4 y2)
(carriable-at key0 x4 y5)
(next-x-right x4 x5)
(door-at door0 x5 y2)
(is-locked door0)
(next-x-right x2 x3)
(is-clear x3 y5)
(is-clear x3 y2)
(is-clear x3 y6)
(next-x-left x3 x2)
(next-x-right x0 x1)
(next-x-left x4 x3)
(is-clear x3 y1)
(next-x-right x1 x2)
(is-clear x4 y1)
(has-color door0 yellow)
(at x3 y4)
(is-clear x6 y6)
(has-color key0 yellow)
(is-clear x6 y3)
(next-y-up y5 y4)
(next-y-down y0 y1)
(is-clear x4 y4)
(is-clear x2 y6)
(is-clear x6 y5)
(next-y-down y1 y2)
(is-clear x2 y2)
(next-x-left x5 x4)
(next-y-up y2 y1)
(next-y-down y4 y5)
(is-clear x6 y2)
(next-x-left x6 x5)
(next-y-up y6 y5)
(is-clear x2 y1)
(next-x-left x2 x1)
(next-x-right x5 x6)
(is-clear x1 y1)
(is-clear x2 y5)
(is-clear x6 y1)
(next-y-up y4 y3)
(is-clear x1 y3)
(is-clear x3 y3)
(is-clear x3 y4)
(next-x-right x3 x4)
(next-y-down y6 y7)
(is-clear x4 y6)
(next-y-down y2 y3)
(next-y-up y7 y6)
(next-x-left x1 x0)
(is-clear x1 y2)
(next-x-left x7 x6)
(is-clear x4 y3)
(is-clear x2 y3)
(is-clear x6 y4)
(next-y-up y1 y0)
(next-y-down y3 y4)
(is-clear x1 y4)
(storage-empty)
(is-clear x2 y4)
(is-clear x1 y6)
	)

(:goal (and
    (at x6 y6)
	))

)
